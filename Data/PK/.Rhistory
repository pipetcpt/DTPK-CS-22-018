mutate(conc = ifelse(is.na(conc), 0, conc)) %>%
mutate(Period = as.character(Period)) %>%
group_by(trt, Time) %>%
mutate(mean=mean(conc), sd=sd(conc)) %>%
ggplot(aes(x=Time, y=mean, col=trt)) +
geom_point(size=2, alpha=0.5) +
geom_line(size=0.5, alpha=0.5) +
geom_errorbar(aes(ymin=mean, ymax=mean+sd)) +
facet_wrap(~trt) +
scale_x_continuous(breaks = seq(0, 48, 6)) +
labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)") +
theme_bw() +
theme(text=element_text(size=14)) +
theme(strip.background = element_rect(fill = NA, colour = NA)) +
ggsci::scale_color_aaas()
p <-  plot_grid(meancurve,
meancurve + scale_y_log10(),
labels = c("A (Linear)", "B (Semilog)"), ncol=1)
title <- ggdraw() + draw_label(sprintf("%s Mean Concentration-Time Curves ", dataname),
fontface = 'bold',
x = 0,
hjust = 0,
size = 20,
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1))
ggsave(filename=sprintf("CSR/figures/%s_mean.pdf", dataname), width = 10, height = 8)
}
map(1:2, plot_mean)
####### NCA & BE
BBB <- bbb %>%
#dropout 빼고 - 없음
group_by(drug, Subject, Period) %>%
summarise(tmax=Time[which.max(conc)]) %>%
ungroup() %>%
right_join(bbb) %>%
filter(!(conc==0 & Time>tmax))
#View(BBB)
subj_dose <- BBB %>%
select(drug, Subject, trt, dose) %>%
distinct() %>%
.$dose
nca <- tblNCA(as.data.frame(BBB),
key=c("drug", "SID", "Subject", "trt", "Period", "Cohort"),
colTime="atime",
colConc="conc",
dose=subj_dose,
R2ADJ=0)
#View(nca)
dapa4be <- nca %>% filter(drug=="Dapagliflozin") %>%
select(SUBJ = Subject, GRP = Cohort, PRD = Period, TRT = trt, AUCLST, CMAX) %>%
mutate(GRP = ifelse(GRP == "A", "RT", "TR"))
# %>% af(c("SUBJ", "GRP", "PRD", "TRT"))
be2x2(dapa4be, c("AUCLST", "CMAX"))
#View(dapa4be)
library(sasLM)
glime4be <- nca %>% filter(drug=="Glimepiride") %>%
select(SUBJ = Subject, GRP = Cohort, PRD = Period, TRT = trt, AUCLST, CMAX) %>%
mutate(GRP = ifelse(GRP == "A", "RT", "TR")) %>%
af(c("SUBJ", "GRP", "PRD", "TRT"))
be2x2(glime4be, c("AUCLST", "CMAX"))
# PK table
library(EnvStats) #geoMean에 필요함
PKtable <- nca %>%
select(Subject, drug, trt, AUCLST, CMAX, AUCIFO, TMAX, LAMZHL, CLFO, VZFO) %>%
gather(param, value, AUCLST:VZFO) %>%
na.omit() %>%
group_by(drug, trt, param) %>%
summarise(mean = round(mean(value), 2),
sd = round(sd(value), 2),
min = round(min(value), 1),
max = round(max(value), 1),
median = round(median(value), 1),
geoMean = round(geoMean(value), 2)) %>%
ungroup() %>%
mutate(final = ifelse(param == 'TMAX',
yes = paste0(median, '(', min, '-', max, ')'),
no = paste0(mean, '±', sd))) %>%
mutate(CV = round((sd / mean * 100), 2)) %>%
select(drug, trt, param, final, geoMean, CV) %>%
gather(stat, value, final:CV) %>%
unite(txstat, trt, stat, sep = '_') %>%
mutate(txstat = factor(txstat, level = c('R_final', 'R_geoMean', 'R_CV', 'T_final', 'T_geoMean', 'T_CV'))) %>%
spread(txstat, value) %>%
mutate(param = factor(param, level = c('CMAX', 'AUCLST', 'AUCIFO', 'TMAX', 'LAMZHL', 'CLFO', 'VZFO'))) %>%
arrange(drug, param)
#write_csv(PKtable, 'CSR/Tables/PKtable.csv')
##### appendix
###16.2.5.2 와 16.2.5.3  시험대상자별 혈장 내 농도
# <- 열수가 너무 많아 한 장에 들어가기 힘들 것 같음
con_glime <- glime %>% spread(Time, Conc)
con_dapa <-  dapa %>% spread(Time, Conc)
T <- glime %>% mutate(Time = paste(Time, "hr")) %>% select(Time) %>% distinct()
colnames(con_glime) <- c("Subject", "Period", pull(T))
colnames(con_dapa) <- colnames(con_glime)
# 순서군으로 나눠서 함 # 주석으로 시간단위와 농도단위 넣어줘야 함
gli_A <- glime %>% filter(grepl("A", Subject)) %>% mutate(Time = as.character(Time)) %>% spread(Subject, Conc)
gli_B <- glime %>% filter(grepl("B", Subject)) %>% mutate(Time = as.character(Time)) %>% spread(Subject, Conc)
dap_A <- dapa %>% filter(grepl("A", Subject)) %>% mutate(Time = as.character(Time)) %>% spread(Subject, Conc)
dap_B <- dapa %>% filter(grepl("B", Subject)) %>% mutate(Time = as.character(Time)) %>% spread(Subject, Conc)
#write_csv(gli_A, "CSR/Table/conc_gli_A.csv")
#write_csv(gli_B, "CSR/Table/conc_gli_B.csv")
#write_csv(dap_A, "CSR/Table/conc_dap_A.csv")
#write_csv(dap_B, "CSR/Table/conc_dap_B.csv")
###16.2.6	시험대상자별 약동학 결과
nca_appendix <- nca %>%
select(1:4, AUCLST, CMAX, TMAX, LAMZHL, CLFO, VZFO)
colnames(nca_appendix) <- c("Drug", "SID", "RID", "Treatment",
"AUCt (hr*ng/mL)", "Cmax (ng/mL)",
"Tmax (hr)", "t1/2 (hr)", "CL/F (L/hr)", "Vd/F (L)")
write_csv(nca_appendix, "CSR/Table/nca_appendix.csv")
save(ccc, BBB, nca, PKtable, gli_A, gli_B, dap_A, dap_B, nca_appendix, file = "CSR/Table/data.Rdata")
load("CSR/Table/data.Rdata")
###16.2.6.3 시험대상자별 혈중농도 프로파일
#deparse(substitute(a))
plot_indi <- function(data, page_num){
dataname <- deparse(substitute(data))
indicurve <- data %>%
mutate(Treatment = trt) %>%
ggplot(aes(x = atime, y = conc, col = Treatment)) +
geom_line(alpha=0.7) +
geom_point(size=1, alpha=0.7) +
facet_wrap_paginate(~Subject, ncol=4, nrow=3, page=page_num) +
scale_x_continuous(breaks = seq(0, 48, 6)) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, colour = NA)) +
ggsci::scale_color_aaas()
indicurve + labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)",
title = sprintf("Individual %s Concentration-Time Curves (Linear)", dataname)) +
theme(text=element_text(size=15))
ggsave(filename=sprintf("CSR/figures/%s_indi_linear%01d.png", dataname, page_num), width = 10, height = 8)
indicurve +
labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)",
title = sprintf("Individual %s Concentration-Time Curves (Semilog)", dataname)) +
scale_y_log10() +
theme(text=element_text(size=15))
ggsave(filename=sprintf("CSR/figures/%s_indi_semilog%01d.png", dataname, page_num), width = 10, height = 8)
}
#plot_indi(Glimepiride, 2)
map(1:3, ~plot_indi(Glimepiride, .x))
map(1:3, ~plot_indi(Dapagliflozin, .x))
###16.2.6.3 시험대상자별 혈중농도 프로파일
#deparse(substitute(a))
plot_indi <- function(data, page_num){
dataname <- deparse(substitute(data))
indicurve <- data %>%
mutate(Treatment = trt) %>%
ggplot(aes(x = atime, y = conc, col = Treatment)) +
geom_line(alpha=0.7) +
geom_point(size=1, alpha=0.7) +
facet_wrap_paginate(~Subject, ncol=4, nrow=3, page=page_num) +
scale_x_continuous(breaks = seq(0, 48, 6)) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, colour = NA)) +
ggsci::scale_color_aaas()
indicurve + labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)",
title = sprintf("Individual %s Concentration-Time Curves (Linear)", dataname)) +
theme(text=element_text(size=15))
ggsave(filename=sprintf("CSR/figures/%s_indi_linear%01d.png", dataname, page_num), width = 10, height = 8)
indicurve +
labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)",
title = sprintf("Individual %s Concentration-Time Curves (Semilog)", dataname)) +
scale_y_log10() +
theme(text=element_text(size=15))
ggsave(filename=sprintf("CSR/figures/%s_indi_semilog%01d.png", dataname, page_num), width = 10, height = 8)
}
#plot_indi(Glimepiride, 2)
map(1:3, ~plot_indi(Glimepiride, .x))
map(1:3, ~plot_indi(Dapagliflozin, .x))
###16.2.6.3 시험대상자별 혈중농도 프로파일
#deparse(substitute(a))
plot_indi <- function(data, page_num){
dataname <- deparse(substitute(data))
indicurve <- data %>%
mutate(Treatment = trt) %>%
ggplot(aes(x = atime, y = conc, col = Treatment)) +
geom_line(alpha=0.7) +
geom_point(size=1, alpha=0.7) +
facet_wrap_paginate(~Subject, ncol=4, nrow=3, page=page_num) +
scale_x_continuous(breaks = seq(0, 48, 6)) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, colour = NA)) +
ggsci::scale_color_aaas()
indicurve + labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)",
title = sprintf("Individual %s Concentration-Time Curves (Linear)", dataname)) +
theme(text=element_text(size=15))
ggsave(filename=sprintf("CSR/figures/%s_indi_linear%01d.png", dataname, page_num), width = 10, height = 8)
indicurve +
labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)",
title = sprintf("Individual %s Concentration-Time Curves (Semilog)", dataname)) +
scale_y_log10() +
theme(text=element_text(size=15))
ggsave(filename=sprintf("CSR/figures/%s_indi_semilog%01d.png", dataname, page_num), width = 10, height = 8)
}
#plot_indi(Glimepiride, 2)
map(1:3, ~plot_indi(Glimepiride, .x))
map(1:3, ~plot_indi(Dapagliflozin, .x))
View(plot_indi)
View(plot_indi)
View(plot_indi)
View(plot_indi)
###16.2.5.2 와 16.2.5.3  시험대상자별 혈장 내 농도
N <- read_excel("data/PK/niclosamide.xlsx", sheet=5) %>% select(-1)
HN <- read_excel("data/PK/3-hydroxyN.xlsx", sheet=5) %>% select(-1)
###16.2.6.3 시험대상자별 혈중농도 프로파일
atdt4nca %>%
ggplot(aes(x=actualtime, y=conc, group=interaction(subj, substance), col=substance)) +
geom_line(alpha=0.3) +
geom_point(alpha=0.3) +
facet_wrap(~subj, ncol=4) +
scale_x_continuous(breaks = seq(0, 24, 4)) +
labs(x = "Time (h)", y = "Plasma Concentration (ng/mL)",
col = "Substance",
title = "Individual Concentration-Time Curves") +
theme_bw() +
theme(strip.background = element_rect(fill = NA, colour = NA)) +
ggsci::scale_color_aaas()
# ggsave("CSR/figures/individual_conc.png", width = 15, height = 12)
install.packages('NonCompart')
library(NonCompart)
(?)spread
help(spread)
install.packages('spread')
library(spread)
library(tidyverse)
library(readxl)
library(zoo)
library(NonCompart)
library(gtsummary)
library(sasLM)
library(nlme)
setwd("C:/Users/cmc/Desktop/아주PK")
library(tidyverse)
library(readxl)
library(zoo)
library(NonCompart)
library(gtsummary)
library(sasLM)
library(nlme)
my_theme <-
list(
# round large p-values to two places
"pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
"pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),
# report median (IQR) and n (percent) as default stats in `tbl_summary()`
"tbl_summary-str:continuous_stat" = "{mean} ± {sd}",
"tbl_summary-str:categorical_stat" = "{n} ({p}%)"
)
set_gtsummary_theme(my_theme)
theme_gtsummary_compact()
setwd(C:/Users/cmc/Documents/GitHub/DTPK-CS-22-018/Data/PK)
setwd('C:/Users/cmc/Documents/GitHub/DTPK-CS-22-018/Data/PK')
library(tidyverse)
library(readxl)
library(zoo)
library(NonCompart)
library(gtsummary)
library(sasLM)
library(nlme)
my_theme <-
list(
# round large p-values to two places
"pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
"pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),
# report median (IQR) and n (percent) as default stats in `tbl_summary()`
"tbl_summary-str:continuous_stat" = "{mean} ± {sd}",
"tbl_summary-str:categorical_stat" = "{n} ({p}%)"
)
set_gtsummary_theme(my_theme)
theme_gtsummary_compact()
setwd('C:/Users/cmc/Documents/GitHub/DTPK-CS-22-018/Data/PK')
## Dapa prep
datad <- read_excel('Data/PK/Dapagliflozin.xlsx', sheet = 5, skip = 1)
library(tidyverse)
library(readxl)
library(zoo)
library(NonCompart)
library(gtsummary)
library(sasLM)
library(nlme)
my_theme <-
list(
# round large p-values to two places
"pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
"pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),
# report median (IQR) and n (percent) as default stats in `tbl_summary()`
"tbl_summary-str:continuous_stat" = "{mean} ± {sd}",
"tbl_summary-str:categorical_stat" = "{n} ({p}%)"
)
set_gtsummary_theme(my_theme)
theme_gtsummary_compact()
setwd('C:/Users/cmc/Documents/GitHub/DTPK-CS-22-018/Data/PK')
## Dapa prep
datad <- read_excel('Dapagliflozin.xlsx', sheet = 5, skip = 1)
"%ni%" <- Negate("%in%")
dapa <- datad %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("B140", "B070")) %>%
as.data.frame()
# DB 수령 후 Real-time 적용 예정
## NCA calculation
dapa_NCA <- tblNCA(dapa, key = c("Period", "ID"), colTime = "Time", colConc = "Conc", dose = 10, adm = "Extravascular", R2ADJ = -1, concUnit = 'mg/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
dapa_NCA %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## Comparative PK(CMAX)
dapa_BE_raw <- dapa_NCA  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fc <- LCMAX ~ Period  # LCMAX
BEdc <- lme(fc, random = ~1|ID, data = dapa_BE_raw)
cidc <- intervals(BEdc, 0.9)
exp(cidc$fixed["Period2기", ])    ## 90% CI result
GLM(fc, dapa_BE_raw)$ANOVA     ## Anova result
## Comparative PK(AUCLST)
dapa_BE_raw <- dapa_NCA  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fa <- LAUCLST ~ Period  # LAUCLST
BEda <- lme(fa, random = ~1|ID, data = dapa_BE_raw)
cida <- intervals(BEda, 0.9)
exp(cida$fixed["Period2기", ])    ## 90% CI result
GLM(fa, dapa_BE_raw)$ANOVA     ## Anova result
## Metformin prep(Cohort B)
datamb <- read_excel('Metformin.xlsx', sheet = 5, skip = 1)
"%ni%" <- Negate("%in%")
metforminb <- datamb %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("B140", "B070")) %>%
as.data.frame()
# DB 수령 후 Real-time 적용 예정
## NCA calculation
metformin_NCAb <- tblNCA(metforminb, key = c("Period", "ID"), colTime = "Time", colConc = "Conc", dose = 1000, adm = "Extravascular", R2ADJ = -1, concUnit = 'mg/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
metformin_NCAb %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## Comparative PK(Metformin_Cohort B_CMAX)
metformin_BE_rawb <- metformin_NCAb  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fmbc <- LCMAX ~ Period  # LCMAX
BEmbc <- lme(fmbc, random = ~1|ID, data = metformin_BE_rawb)
cimbc <- intervals(BEmbc, 0.9)
exp(cimbc$fixed["Period2기", ])    ## 90% CI result
GLM(fmbc, metformin_BE_rawb)$ANOVA     ## Anova result
## Comparative PK(Metformin_Cohort B_AUCLST)
metformin_BE_rawb <- metformin_NCAb  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fmba <- LAUCLST ~ Period  # LAUCLST
BEmba <- lme(fmba, random = ~1|ID, data = metformin_BE_rawb)
cimba <- intervals(BEmba, 0.9)
exp(cimba$fixed["Period2기", ])    ## 90% CI result
GLM(fmba, metformin_BE_rawb)$ANOVA     ## Anova result
## Metformin prep(Cohort C)
datamc <- read_excel('Metformin.xlsx', sheet = 6, skip = 1)
"%ni%" <- Negate("%in%")
metforminc <- datamc %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("C040", "C190", "C230")) %>%
as.data.frame()
# DB 수령 후 Real-time 적용 예정
## NCA calculation
metformin_NCAc <- tblNCA(metforminc, key = c("Period", "ID"), colTime = "Time", colConc = "Conc", dose = 1000, adm = "Extravascular", R2ADJ = -1, concUnit = 'mg/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
metformin_NCAc %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## Comparative PK(Metformin_Cohort C_Cmax)
metformin_BE_rawc <- metformin_NCAc  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fmc <- LCMAX ~ Period  # LCMAX
BEmc <- lme(fmc, random = ~1|ID, data = metformin_BE_rawc)
cimc <- intervals(BEmc, 0.9)
exp(cimc$fixed["Period2기", ])    ## 90% CI result
GLM(fmc, metformin_BE_rawc)$ANOVA     ## Anova result
## Comparative PK(Metformin_Cohort C_AUCLST)
metformin_BE_rawc <- metformin_NCAc  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fma <- LAUCLST ~ Period  # LAUCLST
BEma <- lme(fma, random = ~1|ID, data = metformin_BE_rawc)
cima <- intervals(BEma, 0.9)
exp(cima$fixed["Period2기", ])    ## 90% CI result
GLM(fma, metformin_BE_rawc)$ANOVA     ## Anova result
## Valsartan prep(Cohort A)
datava <- read_excel('Valsartan.xlsx', sheet = 5, skip = 1)
"%ni%" <- Negate("%in%")
valsartana <- datava %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("A030", "A120", "A210")) %>%
as.data.frame()
# DB 수령 후 Real-time 적용 예정
## NCA calculation
valsartan_NCAa <- tblNCA(valsartana, key = c("Period", "ID"), colTime = "Time", colConc = "Conc", dose = 160, adm = "Extravascular", R2ADJ = -1, concUnit = 'mg/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
valsartan_NCAa %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## Comparative PK(Valsartan_Cohort A_CMAX)
valsartan_BE_rawa <- valsartan_NCAa  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fvac <- LCMAX ~ Period  # LCMAX
BEvac <- lme(fvac, random = ~1|ID, data = valsartan_BE_rawa)
civac <- intervals(BEvac, 0.9)
exp(civac$fixed["Period2기", ])    ## 90% CI result
GLM(fvac, valsartan_BE_rawa)$ANOVA     ## Anova result
## Comparative PK(Valsartan_Cohort A_AUCLST)
valsartan_BE_rawa <- valsartan_NCAa  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fvaa <- LAUCLST ~ Period  # LAUCLST
BEvaa <- lme(fvaa, random = ~1|ID, data = valsartan_BE_rawa)
civaa <- intervals(BEvaa, 0.9)
exp(civaa$fixed["Period2기", ])    ## 90% CI result
GLM(fvaa, valsartan_BE_rawa)$ANOVA     ## Anova result
## Valsartan prep(Cohort C)
datavc <- read_excel('Valsartan.xlsx', sheet = 6, skip = 1)
"%ni%" <- Negate("%in%")
valsartanc <- datavc %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("C040", "C190", "C230")) %>%
as.data.frame()
# DB 수령 후 Real-time 적용 예정
## NCA calculation
valsartan_NCAc <- tblNCA(valsartanc, key = c("Period", "ID"), colTime = "Time", colConc = "Conc", dose = 160, adm = "Extravascular", R2ADJ = -1, concUnit = 'ng/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
valsartan_NCAc %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## Comparative PK(Valsartan_Cohort C_CMAX)
valsartan_BE_rawc <- valsartan_NCAc  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fvcc <- LCMAX ~ Period  # LCMAX, LAUCLST
BEvcc <- lme(fvcc, random = ~1|ID, data = valsartan_BE_rawc)
civcc <- intervals(BEvcc, 0.9)
exp(civcc$fixed["Period2기", ])    ## 90% CI result
GLM(fvcc, valsartan_BE_rawc)$ANOVA     ## Anova result
## Comparative PK(Valsartan_Cohort C_AUCLST)
valsartan_BE_rawc <- valsartan_NCAc  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fvca <- LAUCLST ~ Period  # LAUCLST
BEvca <- lme(fvca, random = ~1|ID, data = valsartan_BE_rawc)
civca <- intervals(BEvca, 0.9)
exp(civca$fixed["Period2기", ])    ## 90% CI result
GLM(fvca, valsartan_BE_rawc)$ANOVA     ## Anova result
## Valsartan prep(Cohort C)
datavc <- read_excel('Valsartan.xlsx', sheet = 6, skip = 1)
"%ni%" <- Negate("%in%")
valsartanc <- datavc %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("C040", "C190", "C230")) %>%
as.data.frame()
# DB 수령 후 Real-time 적용 예정
## NCA calculation
valsartan_NCAc <- tblNCA(valsartanc, key = c("Period", "ID"), colTime = "Time", colConc = "Conc", dose = 160, adm = "Extravascular", R2ADJ = -1, concUnit = 'ng/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
valsartan_NCAc %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## Comparative PK(Valsartan_Cohort C_CMAX)
valsartan_BE_rawc <- valsartan_NCAc  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fvcc <- LCMAX ~ Period  # LCMAX, LAUCLST
BEvcc <- lme(fvcc, random = ~1|ID, data = valsartan_BE_rawc)
civcc <- intervals(BEvcc, 0.9)
exp(civcc$fixed["Period2기", ])    ## 90% CI result
GLM(fvcc, valsartan_BE_rawc)$ANOVA     ## Anova result
## Comparative PK(Valsartan_Cohort C_AUCLST)
valsartan_BE_rawc <- valsartan_NCAc  %>%
mutate(LCMAX = log10(CMAX), LAUCLST = log10(AUCLST))
fvca <- LAUCLST ~ Period  # LAUCLST
BEvca <- lme(fvca, random = ~1|ID, data = valsartan_BE_rawc)
civca <- intervals(BEvca, 0.9)
exp(civca$fixed["Period2기", ])    ## 90% CI result
GLM(fvca, valsartan_BE_rawc)$ANOVA     ## Anova result

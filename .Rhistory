"tbl_summary-str:categorical_stat" = "{n} ({p}%)"
)
set_gtsummary_theme(my_theme)
theme_gtsummary_compact()
## Dapa prep
datad <- read_excel('Data/PK/Dapagliflozin.xlsx', sheet = 5, skip = 1)
setwd("~/GitHub/DTPK-CS-22-018")
my_theme <-
list(
# round large p-values to two places
"pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
"pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),
# report median (IQR) and n (percent) as default stats in `tbl_summary()`
"tbl_summary-str:continuous_stat" = "{mean} ± {sd}",
"tbl_summary-str:categorical_stat" = "{n} ({p}%)"
)
set_gtsummary_theme(my_theme)
theme_gtsummary_compact()
## Dapa prep
datad <- read_excel('Data/PK/Dapagliflozin.xlsx', sheet = 5, skip = 1)
"%ni%" <- Negate("%in%")
dapa <- datad %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("B140", "B070")) %>%
as.data.frame()
#plot 생성
head(dapa)
dapa %>%
mutate(Conc = ifelse(Time == 0, 0, Conc)) %>%
group_by(Period, Time) %>%
summarise(mean = mean(Conc, na.rm = T), sd = sd(Conc, na.rm = T)) %>%
ungroup() %>%
ggplot() +
geom_line(aes(x = Time, y = mean, col = Period)) +
geom_point(aes(x = Time, y = mean, col = Period)) +
geom_errorbar(aes(x = Time, ymax = mean + sd, ymin = mean, col = Period)) +
theme_bw() +
labs(y = "Plasma concentration of dapagliflozin(ng/mL)")
# Real-time 적용
db <- list.files('Data/DB', pattern = "xlsx", full.names = T)
db_rn <- read_excel(db, sheet = "RN")
db_pk <- read_excel(db, sheet = "PB")
db_rn
view(dapa)
db_pk_tidy <- db_pk %>%
mutate(PBDETM = ifelse(SEQ == 1, 0, PBDETM), PBDETM = as.numeric(PBDETM)) %>%
left_join(db_rn %>% select(SUBJID, RNNO), by = "SUBJID") %>%
rename(ID = RNNO) %>%
mutate(Period = ifelse(VISIT %in% c(3, 4), "1기", "2기")) %>%
mutate(Time = parse_number(PBNT))
new_dapa <- dapa %>%
left_join(db_pk_tidy %>% select(ID, Time, PBDETM, Period), by = c("ID", "Period", "Time")) %>%
mutate(RTime = Time + PBDETM/60) %>%
arrange(ID)
## NCA calculation
dapa_NCA <- tblNCA(new_dapa, key = c("Period", "ID"), colTime = "RTime", colConc = "Conc", dose = 10, adm = "Extravascular", R2ADJ = -1, concUnit = 'ng/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
dapa_NCA %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## geometric.mean
dapageo <- dapa_NCA %>%
group_by(Period) %>%
summarise_at(vars(CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, VZFO), geometric.mean, na.rm = TRUE) %>%
mutate_at(vars(-Period), round, 2)%>%
as.data.frame()
write.csv(dapageo, 'dapageo.csv', row.names = F, fileEncoding = 'cp949')
#도저히 모르겠당...CV 구하기!!!!!!!!
# sd(dapa_NCA$CMAX) / mean(dapa_NCA%CMAX) * 100
### 일단 1기와 2기를 나눠보자..
dapa_group1 <- dapa_NCA %>%
filter(Period %in% "1기")
dapa_group2 <- dapa_NCA %>%
filter(Period %in% "2기")
#CMAX_CV구하기
dapacv1 <- sd(group1$CMAX) / mean(group1$CMAX) * 100
my_theme <-
list(
# round large p-values to two places
"pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
"pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),
# report median (IQR) and n (percent) as default stats in `tbl_summary()`
"tbl_summary-str:continuous_stat" = "{mean} ± {sd}",
"tbl_summary-str:categorical_stat" = "{n} ({p}%)"
)
set_gtsummary_theme(my_theme)
theme_gtsummary_compact()
## Dapa prep
datad <- read_excel('Data/PK/Dapagliflozin.xlsx', sheet = 5, skip = 1)
"%ni%" <- Negate("%in%")
dapa <- datad %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("B140", "B070")) %>%
as.data.frame()
#plot 생성
head(dapa)
dapa %>%
mutate(Conc = ifelse(Time == 0, 0, Conc)) %>%
group_by(Period, Time) %>%
summarise(mean = mean(Conc, na.rm = T), sd = sd(Conc, na.rm = T)) %>%
ungroup() %>%
ggplot() +
geom_line(aes(x = Time, y = mean, col = Period)) +
geom_point(aes(x = Time, y = mean, col = Period)) +
geom_errorbar(aes(x = Time, ymax = mean + sd, ymin = mean, col = Period)) +
theme_bw() +
labs(y = "Plasma concentration of dapagliflozin(ng/mL)")
# Real-time 적용
db <- list.files('Data/DB', pattern = "xlsx", full.names = T)
db_rn <- read_excel(db, sheet = "RN")
db_pk <- read_excel(db, sheet = "PB")
db_rn
view(dapa)
db_pk_tidy <- db_pk %>%
mutate(PBDETM = ifelse(SEQ == 1, 0, PBDETM), PBDETM = as.numeric(PBDETM)) %>%
left_join(db_rn %>% select(SUBJID, RNNO), by = "SUBJID") %>%
rename(ID = RNNO) %>%
mutate(Period = ifelse(VISIT %in% c(3, 4), "1기", "2기")) %>%
mutate(Time = parse_number(PBNT))
new_dapa <- dapa %>%
left_join(db_pk_tidy %>% select(ID, Time, PBDETM, Period), by = c("ID", "Period", "Time")) %>%
mutate(RTime = Time + PBDETM/60) %>%
arrange(ID)
## NCA calculation
dapa_NCA <- tblNCA(new_dapa, key = c("Period", "ID"), colTime = "RTime", colConc = "Conc", dose = 10, adm = "Extravascular", R2ADJ = -1, concUnit = 'ng/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
dapa_NCA %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## geometric.mean
dapageo <- dapa_NCA %>%
group_by(Period) %>%
summarise_at(vars(CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, VZFO), geometric.mean, na.rm = TRUE) %>%
mutate_at(vars(-Period), round, 2)%>%
as.data.frame()
write.csv(dapageo, 'dapageo.csv', row.names = F, fileEncoding = 'cp949')
#도저히 모르겠당...CV 구하기!!!!!!!!
# sd(dapa_NCA$CMAX) / mean(dapa_NCA%CMAX) * 100
### 일단 1기와 2기를 나눠보자..
dapa_group1 <- dapa_NCA %>%
filter(Period %in% "1기")
dapa_group2 <- dapa_NCA %>%
filter(Period %in% "2기")
#CMAX_CV구하기
dapacv1 <- sd(group1$CMAX) / mean(group1$CMAX) * 100
#CMAX_CV구하기
dapacv1 <- sd(dapa_group1$CMAX) / mean(dapa_group1$CMAX) * 100
dapacv2 <- sd(dapa_group2$CMAX) / mean(dapa_group2$CMAX) * 100
# 2222222 도저히 모르겠당...CV 구하기!!!!!!!!
# sd(dapa_NCA$CMAX) / mean(dapa_NCA%CMAX) * 100
### 일단 1기와 2기를 나눠보자..
dapa_group1 <- dapa_NCA %>%
filter(Period %in% "1기")
view(dapa_group1)
dapa_group2 <- dapa_NCA %>%
filter(Period %in% "2기")
#CMAX_CV구하기
dapacv1 <- sd(dapa_group1$CMAX) / mean(dapa_group1$CMAX) * 100
dapacv2 <- sd(dapa_group2$CMAX) / mean(dapa_group2$CMAX) * 100
# 2222222 도저히 모르겠당...CV 구하기!!!!!!!!
# sd(dapa_NCA$CMAX) / mean(dapa_NCA%CMAX) * 100
### 일단 1기와 2기를 나눠보자..
dapa_group1 <- dapa_NCA %>%
filter(Period %in% "1기")
view(dapa_group1)
dapa_group2 <- dapa_NCA %>%
filter(Period %in% "2기")
view(dapa_group2)
#CMAX_CV구하기
dapacv1 <- sd(dapa_group1$CMAX) / mean(dapa_group1$CMAX) * 100
dapacv2 <- sd(dapa_group2$CMAX) / mean(dapa_group2$CMAX) * 100
CV <- function(mean, sd) {
(sd/mean)*100
}
CV <- function(mean, sd) {
(sd/mean)*100
}
#도저히 모르겠당...CV 구하기!!!!!!!!
# sd(dapa_NCA$CMAX) / mean(dapa_NCA%CMAX) * 100
### 일단 1기와 2기를 나눠보자..
dapa_group1 <- dapa_NCA %>%
filter(Period %in% "1기")
my_theme <-
list(
# round large p-values to two places
"pkgwide-fn:pvalue_fun" = function(x) style_pvalue(x, digits = 2),
"pkgwide-fn:prependpvalue_fun" = function(x) style_pvalue(x, digits = 2, prepend_p = TRUE),
# report median (IQR) and n (percent) as default stats in `tbl_summary()`
"tbl_summary-str:continuous_stat" = "{mean} ± {sd}",
"tbl_summary-str:categorical_stat" = "{n} ({p}%)"
)
set_gtsummary_theme(my_theme)
theme_gtsummary_compact()
## Dapa prep
datad <- read_excel('Data/PK/Dapagliflozin.xlsx', sheet = 5, skip = 1)
"%ni%" <- Negate("%in%")
dapa <- datad %>%
mutate(Period = ifelse(is.na(Period), na.locf(Period), Period)) %>%
rename("Time" = 2) %>%
gather("ID", "Conc", -c("Period", "Time")) %>%
mutate(Conc = as.numeric(Conc)) %>%
filter(ID %ni% c("B140", "B070")) %>%
as.data.frame()
#plot 생성
head(dapa)
dapa %>%
mutate(Conc = ifelse(Time == 0, 0, Conc)) %>%
group_by(Period, Time) %>%
summarise(mean = mean(Conc, na.rm = T), sd = sd(Conc, na.rm = T)) %>%
ungroup() %>%
ggplot() +
geom_line(aes(x = Time, y = mean, col = Period)) +
geom_point(aes(x = Time, y = mean, col = Period)) +
geom_errorbar(aes(x = Time, ymax = mean + sd, ymin = mean, col = Period)) +
theme_bw() +
labs(y = "Plasma concentration of dapagliflozin(ng/mL)")
# Real-time 적용
db <- list.files('Data/DB', pattern = "xlsx", full.names = T)
db_rn <- read_excel(db, sheet = "RN")
db_pk <- read_excel(db, sheet = "PB")
db_rn
view(dapa)
db_pk_tidy <- db_pk %>%
mutate(PBDETM = ifelse(SEQ == 1, 0, PBDETM), PBDETM = as.numeric(PBDETM)) %>%
left_join(db_rn %>% select(SUBJID, RNNO), by = "SUBJID") %>%
rename(ID = RNNO) %>%
mutate(Period = ifelse(VISIT %in% c(3, 4), "1기", "2기")) %>%
mutate(Time = parse_number(PBNT))
new_dapa <- dapa %>%
left_join(db_pk_tidy %>% select(ID, Time, PBDETM, Period), by = c("ID", "Period", "Time")) %>%
mutate(RTime = Time + PBDETM/60) %>%
arrange(ID)
## NCA calculation
dapa_NCA <- tblNCA(new_dapa, key = c("Period", "ID"), colTime = "RTime", colConc = "Conc", dose = 10, adm = "Extravascular", R2ADJ = -1, concUnit = 'ng/mL') %>%
select(Period, ID, CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, CLFO, VZFO)
## Create summary table
dapa_NCA %>%
select(-ID) %>%
tbl_summary(by = Period,
type = TMAX ~ "continuous",
statistic = c("TMAX") ~ "{median} ({min}- {max})")
## geometric.mean
dapageo <- dapa_NCA %>%
group_by(Period) %>%
summarise_at(vars(CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, VZFO), geometric.mean, na.rm = TRUE) %>%
mutate_at(vars(-Period), round, 2)%>%
as.data.frame()
write.csv(dapageo, 'dapageo.csv', row.names = F, fileEncoding = 'cp949')
CV <- function(mean, sd) {
(sd/mean)*100
}
#도저히 모르겠당...CV 구하기!!!!!!!!
# sd(dapa_NCA$CMAX) / mean(dapa_NCA%CMAX) * 100
### 일단 1기와 2기를 나눠보자..
dapa_group1 <- dapa_NCA %>%
filter(Period %in% "1기")
dapa_group2 <- dapa_NCA %>%
filter(Period %in% "2기")
#CMAX_CV구하기
dapacv1 <- sd(dapa_group1$CMAX) / mean(dapa_group1$CMAX) * 100
dapacv2 <- sd(dapa_group2$CMAX) / mean(dapa_group2$CMAX) * 100
# 아니면
dapacmax <- CV(mean=mean(dapa_group1$CMAX), sd=sd(dapa_group1$CMAX)
dapacmax
dapacmax <- CV(mean=mean(dapa_group1$CMAX), sd=sd(dapa_group1$CMAX))
dapacmax
View(dapa_NCA)
dapacv1
dapacmax2 <- CV(mean=mean(dapa_group2$CMAX), sd=sd(dapa_group2$CMAX))
dapacmax2
?summarise_at
?mutate_at
?~sprintf
?unite
table4.1 <- dapa_NCA %>%
group_by(Period) %>%
summarise(N=n(), Mean=mean(conc), SD= sd(conc), Median=median(conc), Min=min(conc), Max=max(conc)) %>%
ungroup() %>%
mutate("CV(%)" = SD/Mean*100) %>%
mutate_at(-(1:2), round, 2) %>%
mutate_at(-(1:2), ~sprintf("%0.2f", .x)) %>%
unite("Mean ± SD", Mean, SD, sep = " ± ") %>%
select(1:6, 10, everything())
dapacv <- dapa_NCA %>%
group_by(Period) %>%
summarise_at(vars(CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, VZFO), CV, na.rm = TRUE) %>%
mutate_at(vars(-Period), round, 2)%>%
as.data.frame()
dapacv <- dapa_NCA %>%
group_by(Period) %>%
summarise_at(vars(CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, VZFO), function=CV, na.rm = TRUE) %>%
CV <- function(mean, sd) {
(sd/mean)*100
}
dapageo <- dapa_NCA %>%
group_by(Period) %>%
summarise_at(vars(CMAX, TMAX, LAMZHL, AUCLST, AUCIFO, VZFO), geometric.mean, na.rm = TRUE) %>%
mutate_at(vars(-Period), round, 2)%>%
as.data.frame()
CV(mean, sd)
table4.1 <- dapa_NCA %>%
group_by(Period) %>%
summarise(N=n(), Mean=mean(conc), SD= sd(conc), Median=median(conc), Min=min(conc), Max=max(conc)) %>%
ungroup() %>%
mutate("CV(%)" = SD/Mean*100) %>%
mutate_at(-(1:2), round, 2) %>%
mutate_at(-(1:2), ~sprintf("%0.2f", .x)) %>%
unite("Mean ± SD", Mean, SD, sep = " ± ") %>%
select(1:6, 10, everything())
str(dapa_NCA)
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO)
View(pktable)
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit()
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max))
View(pktable)
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2)
View(pktable)
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:3, mean, sd, Median=median, Min=min, Max=max)
colnames(dapa_NCA)
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max) %>%
mutate(param = factor(param, level = c("CMAX","TMAX","LAMZHL","AUCLST","AUCIFO","CLFO","VZFO")))
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max) %>%
mutate(param = factor(param, levels = c("CMAX","TMAX","LAMZHL","AUCLST","AUCIFO","CLFO","VZFO")))
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max) %>%
mutate(param = factor(param, levels = c("CMAX","TMAX","LAMZHL","AUCLST","AUCIFO","CLFO","VZFO"))) %>%
gather(stat, value, 3:7) %>%
unite(trtstat, trt, stat, sep="_"
pktable <- dapa_NCA %>%
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max)
pktable[,2]<-pktable[,2]%>%factor(levels = c("CMAX","TMAX","LAMZHL","AUCLST","AUCIFO","CLFO","VZFO"))
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max)
pktable[,2]<-pktable[,2]%>%factor(levels = c('CMAX','TMAX','LAMZHL','AUCLST','AUCIFO','CLFO','VZFO'))
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max)
str(pktable)
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max) %>%
mutate(param = factor(param, levels = c("CMAX","TMAX","LAMZHL","AUCLST","AUCIFO","CLFO","VZFO"))) %>%
gather(stat, value, 3:7)
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max) %>%
mutate(CV=sd/mean*100)
111.06/523.76
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max) %>%
mutate(CV=round(sd/mean*100,2))
dapacmax1 <- CV(mean=mean(dapa_group1$CMAX), sd=sd(dapa_group1$CMAX))
pktable <- dapa_NCA %>%
# select(1:2, "AUC~last~(hr*ng/mL)"=AUCLST, "C~max~(ng/mL)"=CMAX,
#         "T~max~(hr)"=TMAX, "t~1/2~(hr)"=LAMZHL, "CL/F(L/hr)"=CLFO, "V~d~/F(L)"=VZFO) %>%
gather(param, value,CMAX:VZFO) %>%
na.omit() %>% #결측치제거
group_by(Period, param) %>%
summarise_at(vars(value), lst(mean, sd, median, min, max)) %>%
ungroup() %>%
mutate_at(-(1:2), round, 2) %>%
# mutate("Mean±SD" = ifelse(param=="Tmax(hr)",
#                       sprintf("%0.2f(%0.2f-%0.2f)", median, min, max),
#                       sprintf("%0.2f±%0.2f", mean, sd))) %>%
select(1:2, mean, sd, Median=median, Min=min, Max=max) %>%
mutate(CV=round(sd/mean*100,2)) %>%
mutate(param = factor(param, levels = c("CMAX","TMAX","LAMZHL","AUCLST","AUCIFO","CLFO","VZFO"))) %>%
arrange(Period,param)

select(SID=SUBJID, RID=RNNO, scheduled, done=PBAT) %>%
spread(key=scheduled, value=done)
MyFTable_16.2.6.5.1 <- flex.table.fun(pb.a) #%>% select(1,2,10,3, 4, 6, 5, 7:9))
MyFTable_16.2.6.5.1
MyFTable_16.2.6.5.a1 <- flex.table.fun(pb.a) %>% select(1,2,6,3,4,5,7:19)
MyFTable_16.2.6.5.a1
MyFTable_16.2.6.5.a1 <- flex.table.fun(pb.a %>% select(1,2,6,3,4,5,7:19))
MyFTable_16.2.6.5.a2 <- flex.table.fun(pb.a %>% select(1,2,24,21,22,23,25:37))
MyFTable_16.2.6.5.a2 <- flex.table.fun(pb.a %>% select(1,2,24,21,22,23,25:36))
MyFTable_16.2.6.5.a1
str(pb.a)
MyFTable_16.2.6.5.a1 <- flex.table.fun(pb.a %>% select(1,2,6,3,4,5,10,7,11:17, 8,9,18:19))
MyFTable_16.2.6.5.a1
MyFTable_16.2.6.5.a2 <- flex.table.fun(pb.a %>% select(1,2,23,20:22,27,24,28:34,25,26,35:36))
MyFTable_16.2.6.5.a2
pb.a <- pb0 %>%
left_join(RN[,c(1,5)], by="SUBJID") %>%
filter(IP == "A") %>%
#mutate(scheduled1=ifelse(PBNT %in% c("(0 h)","마지막 투여 직전 (0 h)"), PBNT, parse_number(PBNT))) %>%
mutate(scheduled2=paste(parse_number(PBNT),'hr',sep=""), scheduled=paste(VISIT,scheduled2,sep="_")) %>%
select(SID=SUBJID, RID=RNNO, scheduled, done=PBAT) %>%
spread(key=scheduled, value=done)
MyFTable_16.2.6.5.a1 <- flex.table.fun(pb.a %>% select(1,2,6,3,4,5,10,7,11:17, 8,9,18:19))
MyFTable_16.2.6.5.a1
pb.a <- pb0 %>%
left_join(RN[,c(1,5)], by="SUBJID") %>%
filter(IP == "A") %>%
mutate(scheduled=paste(VISIT,PBNT,sep="_")) %>%
select(SID=SUBJID, RID=RNNO, scheduled, done=PBAT) %>%
spread(key=scheduled, value=done)
MyFTable_16.2.6.5.a1 <- flex.table.fun(pb.a %>% select(1,2,6,3,4,5,10,7,11:17, 8,9,18:19))
MyFTable_16.2.6.5.a2 <- flex.table.fun(pb.a %>% select(1,2,23,20:22,27,24,28:34,25,26,35:36))
MyFTable_16.2.6.5.a1
str(pb.a)
pb.a <- pb0 %>%
left_join(RN[,c(1,5)], by="SUBJID") %>%
filter(IP == "A") %>%
mutate(scheduled2=paste(parse_number(PBNT),'hr',sep=""), scheduled=paste(VISIT,scheduled2,sep="_")) %>%
select(SID=SUBJID, RID=RNNO, scheduled, done=PBAT) %>%
spread(key=scheduled, value=done)
MyFTable_16.2.6.5.a1 <- flex.table.fun(pb.a %>% select(1,2,6,3,4,5,10,7,11:17, 8,9,18:19))
MyFTable_16.2.6.5.a2 <- flex.table.fun(pb.a %>% select(1,2,23,20:22,27,24,28:34,25,26,35:36))
MyFTable_16.2.6.5.a1
pb.b <- pb0 %>%
left_join(RN[,c(1,5)], by="SUBJID") %>%
filter(IP == "B") %>%
mutate(scheduled2=paste(parse_number(PBNT),'hr',sep=""), scheduled=paste(VISIT,scheduled2,sep="_")) %>%
select(SID=SUBJID, RID=RNNO, scheduled, done=PBAT) %>%
spread(key=scheduled, value=done)
pb.c <- pb0 %>%
left_join(RN[,c(1,5)], by="SUBJID") %>%
filter(IP == "C") %>%
mutate(scheduled2=paste(parse_number(PBNT),'hr',sep=""), scheduled=paste(VISIT,scheduled2,sep="_")) %>%
select(SID=SUBJID, RID=RNNO, scheduled, done=PBAT) %>%
spread(key=scheduled, value=done)
MyFTable_16.2.6.5.b1 <- flex.table.fun(pb.b %>% select(1,2,6,3,4,5,10,7,11:17, 8,9,18:19))
MyFTable_16.2.6.5.b2 <- flex.table.fun(pb.b %>% select(1,2,23,20:22,27,24,28:34,25,26,35:36))
MyFTable_16.2.6.5.c1 <- flex.table.fun(pb.c %>% select(1,2,6,3,4,5,10,7,11:17, 8,9,18:19))
MyFTable_16.2.6.5.c2 <- flex.table.fun(pb.c %>% select(1,2,23,20:22,27,24,28:34,25,26,35:36))
MyFTable_16.2.6.5.b1
# 16.2.7 AE-  시험대상자별 이상반응 목록
AE0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<ae\\>", data.files)]), NULL))
AE <- AE0 %>%
mutate(SID = SUBJID,
AESEV = case_when(AESEV == 1 ~ "경증(Mild)",
AESEV == 2 ~ "중등증(Moderate)",
AESEV == 3 ~ "중증(Severe)"),
AESER = case_when(AESER == 1 ~ "예",
AESER == 2 ~ "아니오"),
AEOUT = case_when(AEOUT == 1 ~ "회복됨/해결됨 (Recovered/Resolved)",
AEOUT == 2 ~ "회복되었으나 후유증이 남음/해결되었으나 후유증이 남음(recovered/resolved with sequela)",
AEOUT == 3 ~ "회복중임/해결중임(recovering/resolving)",
AEOUT == 4 ~ "회복되지 않음/해결되지 않음(not recovered/not resolved)",
AEOUT == 5 ~ "알 수 없음(Unknown)",
AEOUT == 6 ~ "사망(Death)"),
AEREL = case_when(AEREL == 1 ~ "관련성이 없음 (Not related)",
AEREL == 2 ~ "관련성이 적음 (Unlikely related)",
AEREL == 3 ~ "관련성이 의심됨 (Possibly related)",
AEREL == 4 ~ "관련성이 많음 (Probably related)",
AEREL == 5 ~ "관련성이 명백 (Definitely related)",
AEREL == 6 ~ "평가 불가능 (Unassessable/unclassifiable)"),
AECON = case_when(AECON == 1 ~ "투여중지(Drug Interrupted)",
AECON == 2 ~ "용량변화 없음(Dose Maintained)",
AECON == 3 ~ "알 수 없음(Unknown)",
AECON == 4 ~ "해당사항 없음(Not Applicable)"),
AEACN = case_when(AEACN == 1 ~ "없음(Not Done)",
AEACN == 2 ~ "약물투여(Medication)",
AEACN == 3 ~ "기타(Others)")) %>%
select(SID,
PT,
AESTDTC,
AESTTC,
AEENDTC,
AEENTC,
AESEV,
AESER,
AEOUT,
AEREL,
AECON,
AEACN) %>%
arrange(SID)
subAE <- merge(subid,AE,by=c("SID"))
colnames(subAE) <- c("SID",
"RID",
"이상반응명",
"시작일",
"시작시간",
"종료일",
"종료시간",
"중증도",
"중대성",
"결과",
"의약품과의 인과관계",
"임상시험용의약품에 대한 조치",
"이상반응에 대한 조치")
MyFTable_16.2.7 <- flex.table.fun(subAE)
MyFTable_16.2.7
View(AE0)
#16.2.8 AbNormal Indentity Data - 피험자별 임상검사 비정상치 자료
LB0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<lb\\>", data.files)]), NULL))
subLB <- LB0 %>%
mutate(SID=SUBJID) %>%
merge(subid,.,by=c("SID"))
View(subLB)
# 16.4.1 antecedent drug (선행/병행약물)
CM0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<cm\\>", data.files)]), NULL))
CM<- CM0 %>%
mutate(SID = SUBJID,
CMDOSU = case_when(CMDOSU == 1 ~ "Tablets",
CMDOSU == 2 ~ "Capsules",
CMDOSU == 3 ~ "Ampules",
CMDOSU == 4 ~ "Vials",
CMDOSU == 5 ~ "Gram",
CMDOSU == 6 ~ "Milligram",
CMDOSU == 7 ~ "Microgram",
CMDOSU == 8 ~ "Drops",
CMDOSU == 9 ~ "Liters",
CMDOSU == 10 ~ "Milliliters",
CMDOSU == 11 ~ "Puffs",
CMDOSU == 12 ~ "Suppository",
CMDOSU == 13 ~ "Ointment",
CMDOSU == 14 ~ "Finger Tip Unit",
CMDOSU == 15 ~ "Other(Specify)",
CMDOSU == 16 ~ "UK(Unknown)"),
CMFRQ = case_when(CMFRQ == 1 ~ "OD(Once daily)",
CMFRQ == 2 ~ "BID(Twice daily)",
CMFRQ == 3 ~ "TID(Three times daily)",
CMFRQ == 4 ~ "QOD(Every other day)",
CMFRQ == 5 ~ "PRN(per requested need)",
CMFRQ == 6 ~ "Stat(Single immediatedose)",
CMFRQ == 7 ~ "Cont(Continuous)",
CMFRQ == 8 ~ "Other(Specify)",
CMFRQ == 9 ~ "UK(Unknown)"),
CMROUTE = case_when(CMROUTE == 1 ~ "PO(Per Oral)",
CMROUTE == 2 ~ "SL(Sublingual)",
CMROUTE == 3 ~ "IM(Intramuscular)",
CMROUTE == 4 ~ "IV(Intravenous)",
CMROUTE == 5 ~ "SC(Subcutaneous)",
CMROUTE == 6 ~ "Inhalation",
CMROUTE == 7 ~ "Transdermal",
CMROUTE == 8 ~ "Topical",
CMROUTE == 9 ~ "Ophthalmic",
CMROUTE == 10 ~ "NA(Not Applicable)",
CMROUTE == 11 ~ "Other(Specify)",
CMROUTE == 12 ~ "UK(Unknown)"),
CMINDC = case_when(CMINDC == 1 ~ "병력",
CMINDC == 2 ~ "이상반응",
CMINDC == 3 ~ "예방",
CMINDC == 4 ~ "기타(Specify)")) %>%
select(SID,
CMTRT,
CMDOSTOT,
CMDOSU,
CMFRQ,
CMROUTE,
CMINDC,
CMSTDTC,
CMENDTC,
ATCCD,
ATCLV1,
ATCLV2,
ATCLV3,
ATCLV4,
ATCLV5) %>%
arrange(SID)
MyFTable_16.4.1 <- flex.table.fun(subCM)
subCM <- merge(subid,CM,by=c("SID"))
colnames(subCM) <- c("SID",
"RID",
"약물명",
"투여량",
"단위",
"빈도",
"경로",
"사유",
"시작일",
"종료일",
"ATCCD",
"ATCLV1",
"ATCLV2",
"ATCLV3",
"ATCLV4",
"ATCLV5")
MyFTable_16.4.1 <- flex.table.fun(subCM)
MyFTable_16.4.1
View(CM0)
# 16.4.1 antecedent drug (선행/병행약물)
CM0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<cm\\>", data.files)]), NULL))
View(CM0)
CM<- CM0 %>%
mutate(SID = SUBJID,
CMDOSU = case_when(CMDOSU == 1 ~ "Tablets",
CMDOSU == 2 ~ "Capsules",
CMDOSU == 3 ~ "Ampules",
CMDOSU == 4 ~ "Vials",
CMDOSU == 5 ~ "Gram",
CMDOSU == 6 ~ "Milligram",
CMDOSU == 7 ~ "Microgram",
CMDOSU == 8 ~ "Drops",
CMDOSU == 9 ~ "Liters",
CMDOSU == 10 ~ "Milliliters",
CMDOSU == 11 ~ "Puffs",
CMDOSU == 12 ~ "Suppository",
CMDOSU == 13 ~ "Ointment",
CMDOSU == 14 ~ "Finger Tip Unit",
CMDOSU == 15 ~ "Other(Specify)",
CMDOSU == 16 ~ "UK(Unknown)"),
CMFRQ = case_when(CMFRQ == 1 ~ "OD(Once daily)",
CMFRQ == 2 ~ "BID(Twice daily)",
CMFRQ == 3 ~ "TID(Three times daily)",
CMFRQ == 4 ~ "QOD(Every other day)",
CMFRQ == 5 ~ "PRN(per requested need)",
CMFRQ == 6 ~ "Stat(Single immediatedose)",
CMFRQ == 7 ~ "Cont(Continuous)",
CMFRQ == 8 ~ "Other(Specify)",
CMFRQ == 9 ~ "UK(Unknown)"),
CMROUTE = case_when(CMROUTE == 1 ~ "PO(Per Oral)",
CMROUTE == 2 ~ "SL(Sublingual)",
CMROUTE == 3 ~ "IM(Intramuscular)",
CMROUTE == 4 ~ "IV(Intravenous)",
CMROUTE == 5 ~ "SC(Subcutaneous)",
CMROUTE == 6 ~ "Inhalation",
CMROUTE == 7 ~ "Transdermal",
CMROUTE == 8 ~ "Topical",
CMROUTE == 9 ~ "Ophthalmic",
CMROUTE == 10 ~ "NA(Not Applicable)",
CMROUTE == 11 ~ "Other(Specify)",
CMROUTE == 12 ~ "UK(Unknown)"),
CMINDC = case_when(CMINDC == 1 ~ "병력",
CMINDC == 2 ~ "이상반응",
CMINDC == 3 ~ "예방",
CMINDC == 4 ~ "기타(Specify)")) %>%
select(SID,
CMTRT,
CMDOSTOT,
CMDOSU,
CMFRQ,
CMROUTE,
CMINDC,
CMSTDTC,
CMENDTC,
ATCCD,
ATCLV1,
ATCLV2,
ATCLV3,
ATCLV4,
ATCLV5) %>%
arrange(SID)
subCM <- merge(subid,CM,by=c("SID"))
colnames(subCM) <- c("SID",
"RID",
"약물명",
"투여량",
"단위",
"빈도",
"경로",
"사유",
"시작일",
"종료일",
"ATCCD",
"ATCLV1",
"ATCLV2",
"ATCLV3",
"ATCLV4",
"ATCLV5")
MyFTable_16.4.1 <- flex.table.fun(subCM)
MyFTable_16.4.1
#16.4.2. ~ Chemistry lab data - 실험실적 검사
LB0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<lb\\>", data.files)]), NULL))
LB <- LB0 %>%
mutate(SID = SUBJID,
LBTEST = case_when(endsWith(LBTEST, "-GT") ~ "GGT",
TRUE ~ as.character(LBTEST))) %>%
dplyr::select(SID, VISIT, LBTEST, LBORRES) %>% dplyr::rename(TEST = LBTEST,
RES = LBORRES) %>%
merge(subid,.,by=c("SID"))
View(LB)
# DB Code  ;  Appendix Code
name_map1 <- data.frame(rbind(
# hematology test
c("WBC", "WBC"),
c("RBC", "RBC"),
c("hemoglobin", "Hemoglobin"),
c("hematocrit", "Hematocrit"),
c("platelets", "Platelets"),
c("Seg. neutrophil", "Seg.neutrophils"),
c("Lymphocyte", "Lymphocyte"),
c("Monocyte", "Monocyte"),
c("Eosinophil", "Eosinophil"),
c("Basophil", "Basophil"),
c("MCV", "MCV"),
c("MCH", "MCH"),
c("MCHC", "MCHC"),
# blood chemistry test
c("Glucose", "Glucose"),
c("BUN", "BUN"),
c("creatinine", "creatinine"),
c("MDRD-eGFR", "MDRD-eGFR"),
c("total protein", "total protein"),
c("albumin", "albumin"),
c("AST", "AST"),
c("ALT", "ALT"),
c("alkaline phosphatase", "alkaline phosphatase"),
c("total bilirubin", "total bilirubin"),
c("GGT", "γ-GT"),
c("uric acid", "uric acid"),
c("Calcium", "Calcium"),
c("phosphorus", "phosphorus"),
c("Na", "Na"),
c("K", "K"),
c("Cl", "Cl"),
c("LDH", "LDH"),
c("Total cholesterol", "Total cholesterol")
)
)
colnames(name_map1) <- c("AnalyteName", "Fullname")
MyFTable_16.4.2.1To16.4.2.33 <- list()
filter_var <- "TEST"
value_var <- "RES"
for(i in 1:length(name_map1$AnalyteName)){
MyFTable_16.4.2.1To16.4.2.33[[i]] <- flex.table.fun(
data = create.table(csvfile    = LB,
code_id    = name_map1$AnalyteName[i],
fullname   = name_map1$Fullname[i],
filter_var = filter_var,
value_var  = value_var,
period_    = NULL,
type_      = "numeric"),
calc_ = TRUE)
print(paste("Creating Table for", name_map1$Fullname[i], "on subject code"))
}
length(name_map1$AnalyteName) #32
#check
MyFTable_16.4.2.1To16.4.2.33[[10]]
name_map1$AnalyteName[10]
# DB Code  ;  Appendix Code
name_map1 <- data.frame(rbind(
# hematology test
c("WBC", "WBC"),
c("RBC", "RBC"),
c("hemoglobin", "Hemoglobin"),
c("hematocrit", "Hematocrit"),
c("platelets", "Platelets"),
c("Seg. neutrophil", "Seg.neutrophils"),
c("Lymphocyte", "Lymphocyte"),
c("Monocyte", "Monocyte"),
c("Eosinophil", "Eosinophil"),
c("Basophil", "Basophil"),
c("MCV", "MCV"),
c("MCH", "MCH"),
c("MCHC", "MCHC"),
# blood chemistry test
c("Glucose", "Glucose"),
c("BUN", "BUN"),
c("creatinine", "creatinine"),
c("MDRD-eGFR", "MDRD-eGFR"),
c("total protein", "total protein"),
c("albumin", "albumin"),
c("AST", "AST"),
c("ALT", "ALT"),
c("alkaline phosphatase", "alkaline phosphatase"),
c("total bilirubin", "total bilirubin"),
c("GGT", "γ-GT"),
c("uric acid", "uric acid"),
c("Calcium", "Calcium"),
c("phosphorus", "phosphorus"),
c("Na", "Na"),
c("K", "K"),
c("Cl", "Cl"),
c("LDH", "LDH"),
c("CPK", "CPK"),
c("Total cholesterol", "Total cholesterol")
)
)
colnames(name_map1) <- c("AnalyteName", "Fullname")
MyFTable_16.4.2.1To16.4.2.33 <- list()
filter_var <- "TEST"
value_var <- "RES"
for(i in 1:length(name_map1$AnalyteName)){
MyFTable_16.4.2.1To16.4.2.33[[i]] <- flex.table.fun(
data = create.table(csvfile    = LB,
code_id    = name_map1$AnalyteName[i],
fullname   = name_map1$Fullname[i],
filter_var = filter_var,
value_var  = value_var,
period_    = NULL,
type_      = "numeric"),
calc_ = TRUE)
print(paste("Creating Table for", name_map1$Fullname[i], "on subject code"))
}
length(name_map1$AnalyteName) #32
#check
MyFTable_16.4.2.1To16.4.2.33[[24]]
name_map1$AnalyteName[24]
#check
MyFTable_16.4.2.1To16.4.2.33[[10]]
#16.4.2.34 ~ 16.4.2.46 - 뇨검사
# Main
name_map2 <- data.frame(rbind(
# urine test
c("glucose(UA)", "Glucose(UA)"),
c("color", "Color"),
c("leukocyte", "Leukocyte"),
c("bilirubin", "Bilirubin"),
c("ketone", "Ketone"),
c("Specific gravity", "Specific gravity"),
c("occult blood", "Occult blood"),
c("pH", "PH"),
c("protein", "Protein"),
c("urobilinogen", "Urobilinogen"),
c("nitrite", "Nitrite"),
#  urine test_Microscopy
c("Microscopy_WBC", "Microscopy WBC"),
c("Microscopy_RBC", "Microscopy RBC"))
)
colnames(name_map2) <- c("AnalyteName", "Fullname")
MyFTable_16.4.2.34To16.4.2.46 <- list()
filter_var <- "TEST"
value_var <- "RES"
for(i in 1:length(name_map2$AnalyteName)){
MyFTable_16.4.2.34To16.4.2.46[[i]] <- flex.table.fun(
data = create.table(csvfile    = LB,
code_id    = name_map2$AnalyteName[i],
fullname   = name_map2$Fullname[i],
filter_var = filter_var,
value_var  = value_var,
period_    = NULL,
type_      = FALSE),
calc_ = FALSE)
print(paste("Table created for", name_map2$Fullname[i]))
}
lenght(name_map2$AnalyteName)
length(name_map2$AnalyteName)
#check
MyFTable_16.4.2.34To16.4.2.46[[10]]
name_map2$AnalyteName[10]
View(LB)
BC.LAB <- LB %>%
filter(TEST == "PT(INR)" |
TEST == "aPTT") %>%
select(SID,RID, TEST, RES) %>%
arrange(SID)
AnalyteName.pivot2 <- dcast(BC.LAB, SID ~ TEST, value.var = "RES")
subBCT <- merge(subid,AnalyteName.pivot2,by=c("SID"))
MyFTable_16.4.2.44 <- flex.table.fun(subBCT)
MyFTable_16.4.2.44
SR.LAB <- LB %>%
filter(TEST == "HBsAg" |
TEST == "anti-HCV Ab" |
TEST == "HIV Ag/Ab" |
TEST == "Syphilis reagin test") %>%
select(SID,RID, TEST, RES) %>%
arrange(SID)
SR.LAB[SR.LAB==1] <- "Negative"
SR.LAB[SR.LAB==2] <- "Positive"
AnalyteName.pivot <- dcast(SR.LAB, SID ~ TEST, value.var = "RES")
subST <- merge(subid,AnalyteName.pivot,by=c("SID"))
MyFTable_16.4.2.45 <- flex.table.fun(subST)
MyFTable_16.4.2.45
#16.4.3 Medical History - 병력
MH0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<mh\\>", data.files)]), NULL))
MH <- MH0 %>%
mutate(SID = SUBJID) %>%
select(SID, MHSTDTC, PT, SOC)
subMH <- merge(subid,MH,by=c("SID"))
MyFTable_16.4.3 <- flex.table.fun(subMH)
MyFTable_16.4.3
# 16.4.4. 시험대상자의 선정
IE0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<ie\\>", data.files)]), NULL))
IE <- IE0 %>%
mutate(SID = SUBJID) %>%
select(SID, IEYN)
#IE.pivot <- dcast(IE, SUBJID ~ IETEST_STD, value.var = "IEORRES_STD")
subIE <- merge(subid,IE,by=c("SID"))
subIE[subIE==1] <- "Yes"
subIE[subIE==2] <- "No"
MyFTable_16.4.4 <- flex.table.fun(subIE)
MyFTable_16.4.4
# 16.4.5 Physical examination - 신체검사
PE0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<pe\\>", data.files)]), NULL))
PE <- visit.match.fun(infile = PE0, visitData = VST)
# 16.4.5 Physical examination - 신체검사
PE0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<pe\\>", data.files)]), NULL))
PE <- visit.match.fun(infile = PE0, visitData = VST)
View(PE)
# 16.4.5 Physical examination - 신체검사
PE0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<pe\\>", data.files)]), NULL))
View(PE0)
# 16.4.5 Physical examination - 신체검사
PE0 <- as.data.frame(read_sas(paste0(data.path, "/", data.files[grepl("\\<pe\\>", data.files)]), NULL))
PE <- visit.match.fun(infile = PE0, visitData = VST)
View(PE)
